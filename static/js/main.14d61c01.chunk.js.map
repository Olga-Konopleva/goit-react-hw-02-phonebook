{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["Form","styled","form","Button","button","Span","span","Label","label","ContactForm","onSubmit","useState","name","setName","number","setNumber","e","preventDefault","newItem","id","uuidv4","type","value","pattern","title","required","onChange","target","Li","li","ContactItem","onDelete","onClick","Ul","ul","ContactList","contacts","map","Filter","onChangeFilter","App","setContacts","filter","setFilter","normalizedFilter","toLowerCase","visibleContacts","contact","includes","className","some","alert","prev","currentTarget","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAKMA,EAAOC,IAAOC,KAAV,yEAIJC,EAASF,IAAOG,OAAV,2OAYNC,EAAOJ,IAAOK,KAAV,6EAKJC,EAAQN,IAAOO,MAAV,oDAmDIC,EA/CK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACZC,mBAAS,IADG,mBAC7BC,EAD6B,KACvBC,EADuB,OAERF,mBAAS,IAFD,mBAE7BG,EAF6B,KAErBC,EAFqB,KAYpC,OACE,eAACf,EAAD,CAAMU,SAVa,SAAAM,GACnBA,EAAEC,iBACF,IAAMC,EAAU,CAAEC,GAAIC,cAAUR,OAAME,UACtCJ,EAASQ,GACTL,EAAQ,IACRE,EAAU,KAKV,UACE,eAACR,EAAD,WACE,cAACF,EAAD,mBACA,uBACEgB,KAAK,OACLT,KAAK,OACLU,MAAOV,EACPW,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAbiB,SAAAV,GAAC,OAAIH,EAAQG,EAAEW,OAAOL,aAgB3C,eAACf,EAAD,WACE,cAACF,EAAD,qBACA,uBACEgB,KAAK,MACLT,KAAK,SACLU,MAAOR,EACPS,QAAQ,+FACRC,MAAM,mlBACNC,UAAQ,EACRC,SAxBmB,SAAAV,GAAC,OAAID,EAAUC,EAAEW,OAAOL,aA2B/C,cAACnB,EAAD,CAAQkB,KAAK,SAAb,6BCjEAlB,EAASF,IAAOG,OAAV,sOAaNwB,EAAK3B,IAAO4B,GAAV,oDAmBOC,EAfK,SAAC,GAAgC,IAA9BlB,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,OAAQiB,EAAe,EAAfA,SACnC,OACE,eAACH,EAAD,WACGhB,EADH,KACWE,EACT,cAAC,EAAD,CAAQkB,QAASD,EAAjB,wBCpBAE,EAAKhC,IAAOiC,GAAV,uEAyBOC,EApBK,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAUL,EAAe,EAAfA,SAC/B,OACE,cAACE,EAAD,UACGG,EAASC,KAAI,gBAAGlB,EAAH,EAAGA,GAAIP,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEEF,KAAMA,EACNE,OAAQA,EACRiB,SAAU,kBAAMA,EAASZ,KAHpBA,SCCAmB,EAbA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAChB,OACE,gCACE,sDACA,uBAAOlB,KAAK,OAAOK,SAAUa,QCgCpBC,EAjCH,WAAO,IAAD,EACgB7B,mBAAS,IADzB,mBACTyB,EADS,KACCK,EADD,OAEY9B,mBAAS,IAFrB,mBAET+B,EAFS,KAEDC,EAFC,KAcVC,EAAmBF,EAAOG,cAC1BC,EAAkBV,EAASM,QAAO,SAAAK,GAAO,OAC7CA,EAAQnC,KAAKiC,cAAcG,SAASJ,MAKtC,OACE,sBAAKK,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAavC,SArBQ,SAAAQ,GACHkB,EAASc,MAAK,SAAAH,GAAO,OAAIA,EAAQnC,OAASM,EAAQN,QAEpEuC,MAAM,GAAD,OAAIjC,EAAQN,KAAZ,4BAGP6B,GAAY,SAAAW,GAAI,4BAAQA,GAAR,CAAclC,UAiB5B,0CACA,cAAC,EAAD,CAAQqB,eAhBe,SAAAvB,GACzB2B,EAAU3B,EAAEqC,cAAc/B,UAgBxB,cAAC,EAAD,CAAac,SAAUU,EAAiBf,SAVhB,SAAAZ,GAC1BsB,GAAY,SAAAW,GAAI,OAAIA,EAAKV,QAAO,SAAAK,GAAO,OAAIA,EAAQ5B,KAAOA,eCpB9DmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.14d61c01.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport styled from 'styled-components';\n\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid green;\n  color: green;\n  width: 200px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\nconst Span = styled.span`\n  margin-right: 10px;\n  display: inline-block;\n`;\n\nconst Label = styled.label`\n  margin-bottom: 15px;\n`;\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newItem = { id: uuidv4(), name, number };\n    onSubmit(newItem);\n    setName('');\n    setNumber('');\n  };\n  const handleChangeName = e => setName(e.target.value);\n  const handleChangeNumber = e => setNumber(e.target.value);\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Span>Name</Span>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChangeName}\n        />\n      </Label>\n      <Label>\n        <Span>Number</Span>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n          onChange={handleChangeNumber}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  background: transparent;\n  border-radius: 6px;\n  border: 2px solid red;\n  color: red;\n  width: 80px;\n  margin-left: 1em;\n  padding: 0.25em 1em;\n  &:hover {\n    background: LemonChiffon;\n  }\n`;\n\nconst Li = styled.li`\n  margin-bottom: 10px;\n`;\n\nconst ContactItem = ({ name, number, onDelete }) => {\n  return (\n    <Li>\n      {name}: {number}\n      <Button onClick={onDelete}>Delete</Button>\n    </Li>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding-left: 5px;\n`;\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <Ul>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          number={number}\n          onDelete={() => onDelete(id)}\n        />\n      ))}\n    </Ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ onChangeFilter }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input type=\"text\" onChange={onChangeFilter} />\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { useState } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n  const handleAddContact = newItem => {\n    const coincidence = contacts.some(contact => contact.name === newItem.name);\n    if (coincidence) {\n      alert(`${newItem.name} is already in contacts`);\n      return;\n    }\n    setContacts(prev => [...prev, newItem]);\n  };\n  const handleChangeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n  const handleDeleteContact = id => {\n    setContacts(prev => prev.filter(contact => contact.id !== id));\n  };\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={handleAddContact} />\n\n      <h2>Contacts</h2>\n      <Filter onChangeFilter={handleChangeFilter} />\n      <ContactList contacts={visibleContacts} onDelete={handleDeleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}